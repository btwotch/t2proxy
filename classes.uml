@startuml
interface connectionHandler {
	bool handleConnection()
        setServerConnection(serverConnection io.ReadWriteCloser)
	io.ReadWriteCloser getServerConnection()
        setClientConnection(serverConnection io.ReadWriteCloser)
        io.ReadWriteCloser getClientConnection()
        setIp(ip string)
        string getIp()
        setPort(port uint16)
        uint16 getPort()
        setWaiter(waiter *sync.WaitGroup)
        (*sync.WaitGroup) getWaiter()

}

class connectionHttpProxyBase {
	setServerConnection(serverConnection io.ReadWriteCloser)
	io.ReadWriteCloser getServerConnection()
        setClientConnection(serverConnection io.ReadWriteCloser)
        io.ReadWriteCloser getClientConnection()
        setIp(ip string)
        string getIp()
        setPort(port uint16)
        uint16 getPort()
        setWaiter(waiter *sync.WaitGroup)
        (*sync.WaitGroup) getWaiter()
	beClient()

	io.ReadWriteCloser serverConnection
	io.ReadWriteCloser clientConnection
	io.ReadCloser clientBody
	(*sync.WaitGroup) waiter 
	sync.Mutex waiterMutex 
	string ip 
	uint16 port 

}

class connectionHttp {
}

class connectionHttps {
}

class connectionHttp implements connectionHandler
class connectionHttps implements connectionHandler

class connectionHttp extends connectionHttpProxyBase
class connectionHttps extends connectionHttpProxyBase
@enduml
